# -*- coding: utf-8 -*-
"""TF-IDF.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uuDFa_Srqd4PCdVxMh0OdttE4PX5g28j
"""

import pandas as pd
from math import log

documents = [
    "과일에는 비타민C가 다량 함유되어 있다.", 
    "비타민C를 채우기 위해서는 다양한 방법이 있다. 비타오백을 마시는 방법, 비타민C가 함유된 건강보조식품을 먹는 방법 등.",
    "동남아에 가면 대체로 한국보다 과일을 저렴하게 살 수 있다.",
    "비타민은 여러 종류가 있다.  비타민A, 비타민B, 비타민C, 비타민D...",
    "한라봉은 제주 특산품으로, 많은 사람들이 즐겨 찾는 과일이다."
]

vocab = list(set(w for doc in documents for w in doc.split()))
vocab.sort()

# 총 문서의 수
N = len(documents)

def tf(t, d):
  return d.count(t)

def idf(t):
  df = 0
  for doc in documents:
    df += t in doc
  return log(N/(df+1))

def tfidf(t, d):
  return tf(t, d)*idf(t)

result = []

# 각 문서에 대해 다음 연산을 반복
for i in range(N):
  result.append([])
  d = documents[i]
  for j in range(len(vocab)):
    t = vocab[j]
    result[-1].append(tf(t, d))

  tf_ = pd.DataFrame(result, columns = vocab)

tf_

result = []
for j in range(len(vocab)):
    t = vocab[j]
    result.append(idf(t))

idf_ = pd.DataFrame(result, index=vocab, columns=["IDF"])

idf_

result = []
for i in range(N):
  result.append([])
  d = documents[i]
  for j in range(len(vocab)):
    t = vocab[j]
    result[-1].append(tfidf(t,d))

tfidf_ = pd.DataFrame(result, columns = vocab)

tfidf_

